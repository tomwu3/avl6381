# workflow name
name: Build avl6381 Driver (Ubuntu 5.4.0-216)

# trigger the workflow manually from the GitHub UI
on:
  workflow_dispatch:

# Define a single job named 'build'
jobs:
  build:
    # use a Linux runner
    runs-on: ubuntu-latest
    
    # steps to be executed in the job
    steps:
      # step 1: check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # step 2: download and install the kernel headers for Ubuntu 5.4.0-216
      - name: Download and Install Ubuntu Kernel Headers
        run: |
          # Install necessary packages for building from source
          sudo apt-get update
          sudo apt-get install -y build-essential
          
          # Download and install libssl1.1 manually to resolve dependency issue
          wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.0g-2ubuntu4_amd64.deb
          sudo dpkg -i ./libssl1.1_1.1.0g-2ubuntu4_amd64.deb
          
          # Download the specific kernel headers and image from Ubuntu archives
          # The URLs are for the 5.4.0-216.236 version on Launchpad
          wget http://launchpadlibrarian.net/787680584/linux-headers-5.4.0-216-generic_5.4.0-216.236_amd64.deb
          wget https://launchpad.net/~canonical-kernel-team/+archive/ubuntu/ppa/+build/30625263/+files/linux-headers-5.4.0-216_5.4.0-216.236_all.deb
          wget https://launchpad.net/~canonical-kernel-team/+archive/ubuntu/ppa/+build/30625263/+files/linux-image-unsigned-5.4.0-216-generic_5.4.0-216.236_amd64.deb
          wget https://launchpad.net/~canonical-kernel-team/+archive/ubuntu/ppa/+build/30625263/+files/linux-modules-5.4.0-216-generic_5.4.0-216.236_amd64.deb
          
          # Install the downloaded .deb packages in the correct order
          sudo dpkg -i linux-headers-5.4.0-216_5.4.0-216.236_all.deb
          sudo dpkg -i linux-headers-5.4.0-216-generic_5.4.0-216.236_amd64.deb
          sudo dpkg -i linux-modules-5.4.0-216-generic_5.4.0-216.236_amd64.deb
          sudo dpkg -i linux-image-unsigned-5.4.0-216-generic_5.4.0-216.236_amd64.deb

      # step 3: compile the driver
      # The compilation steps are combined into one run block
      - name: Compile Driver for Ubuntu Kernel
        # set environment variables and run make commands
        run: |
          # Set the kernel directory to the path of the downloaded headers
          export KERNEL_DIR="/usr/src/linux-headers-5.4.0-216-generic"
          
          # Run the compilation with the specified kernel path
          ls -l $KERNEL_DIR
          
          make prepare
          make KERNEL_DIR=$KERNEL_DIR

      # step 4: create a directory for the compiled modules and copy the files
      - name: Stage compiled modules
        run: |
          mkdir -p build/ko_modules
          cp /home/runner/work/avl6381/avl6381/dvb-core.ko build/ko_modules/
          cp /home/runner/work/avl6381/avl6381/dvb_usb_v2.ko build/ko_modules/
          cp /home/runner/work/avl6381/avl6381/mxl603.ko build/ko_modules/
          cp /home/runner/work/avl6381/avl6381/avl6381.ko build/ko_modules/
          cp /home/runner/work/avl6381/avl6381/it930x.ko build/ko_modules/
          ls -l build/ko_modules/

      # step 5: upload the directory as a workflow artifact
      - name: Upload Driver as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: avl6381-ubuntu-5.4.0-216-modules
          path: build/ko_modules
